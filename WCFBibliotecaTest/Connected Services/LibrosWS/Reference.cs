//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFBibliotecaTest.LibrosWS {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Libro", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Dominio")]
    [System.SerializableAttribute()]
    public partial class Libro : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoLibroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditorialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaPublicacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaRegistroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaginasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TituloField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autor {
            get {
                return this.AutorField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorField, value) != true)) {
                    this.AutorField = value;
                    this.RaisePropertyChanged("Autor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoLibro {
            get {
                return this.CodigoLibroField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoLibroField, value) != true)) {
                    this.CodigoLibroField = value;
                    this.RaisePropertyChanged("CodigoLibro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Editorial {
            get {
                return this.EditorialField;
            }
            set {
                if ((object.ReferenceEquals(this.EditorialField, value) != true)) {
                    this.EditorialField = value;
                    this.RaisePropertyChanged("Editorial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((this.EstadoField.Equals(value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaPublicacion {
            get {
                return this.FechaPublicacionField;
            }
            set {
                if ((this.FechaPublicacionField.Equals(value) != true)) {
                    this.FechaPublicacionField = value;
                    this.RaisePropertyChanged("FechaPublicacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaRegistro {
            get {
                return this.FechaRegistroField;
            }
            set {
                if ((this.FechaRegistroField.Equals(value) != true)) {
                    this.FechaRegistroField = value;
                    this.RaisePropertyChanged("FechaRegistro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Paginas {
            get {
                return this.PaginasField;
            }
            set {
                if ((this.PaginasField.Equals(value) != true)) {
                    this.PaginasField = value;
                    this.RaisePropertyChanged("Paginas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titulo {
            get {
                return this.TituloField;
            }
            set {
                if ((object.ReferenceEquals(this.TituloField, value) != true)) {
                    this.TituloField = value;
                    this.RaisePropertyChanged("Titulo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
    [System.SerializableAttribute()]
    public partial class RepetidoException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibrosWS.ILibros")]
    public interface ILibros {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/CrearLibro", ReplyAction="http://tempuri.org/ILibros/CrearLibroResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/CrearLibroRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro CrearLibro(WCFBibliotecaTest.LibrosWS.Libro libroACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/CrearLibro", ReplyAction="http://tempuri.org/ILibros/CrearLibroResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> CrearLibroAsync(WCFBibliotecaTest.LibrosWS.Libro libroACrear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibro", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/ObtenerLibroRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro ObtenerLibro(string codigoLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibro", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroAsync(string codigoLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ModificarLibro", ReplyAction="http://tempuri.org/ILibros/ModificarLibroResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/ModificarLibroRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro ModificarLibro(WCFBibliotecaTest.LibrosWS.Libro libroAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ModificarLibro", ReplyAction="http://tempuri.org/ILibros/ModificarLibroResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ModificarLibroAsync(WCFBibliotecaTest.LibrosWS.Libro libroAModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/EliminarLibro", ReplyAction="http://tempuri.org/ILibros/EliminarLibroResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/EliminarLibroRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        void EliminarLibro(string codigoLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/EliminarLibro", ReplyAction="http://tempuri.org/ILibros/EliminarLibroResponse")]
        System.Threading.Tasks.Task EliminarLibroAsync(string codigoLibro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ListarLibros", ReplyAction="http://tempuri.org/ILibros/ListarLibrosResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/ListarLibrosRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro[] ListarLibros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ListarLibros", ReplyAction="http://tempuri.org/ILibros/ListarLibrosResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro[]> ListarLibrosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibroPorTitulo", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroPorTituloResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/ObtenerLibroPorTituloRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro ObtenerLibroPorTitulo(string titulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibroPorTitulo", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroPorTituloResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroPorTituloAsync(string titulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibroPorAutor", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroPorAutorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WCFBibliotecaTest.LibrosWS.RepetidoException), Action="http://tempuri.org/ILibros/ObtenerLibroPorAutorRepetidoExceptionFault", Name="RepetidoException", Namespace="http://schemas.datacontract.org/2004/07/WCFBiblioteca.Errores")]
        WCFBibliotecaTest.LibrosWS.Libro ObtenerLibroPorAutor(string autor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibros/ObtenerLibroPorAutor", ReplyAction="http://tempuri.org/ILibros/ObtenerLibroPorAutorResponse")]
        System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroPorAutorAsync(string autor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibrosChannel : WCFBibliotecaTest.LibrosWS.ILibros, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibrosClient : System.ServiceModel.ClientBase<WCFBibliotecaTest.LibrosWS.ILibros>, WCFBibliotecaTest.LibrosWS.ILibros {
        
        public LibrosClient() {
        }
        
        public LibrosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibrosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibrosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibrosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro CrearLibro(WCFBibliotecaTest.LibrosWS.Libro libroACrear) {
            return base.Channel.CrearLibro(libroACrear);
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> CrearLibroAsync(WCFBibliotecaTest.LibrosWS.Libro libroACrear) {
            return base.Channel.CrearLibroAsync(libroACrear);
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro ObtenerLibro(string codigoLibro) {
            return base.Channel.ObtenerLibro(codigoLibro);
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroAsync(string codigoLibro) {
            return base.Channel.ObtenerLibroAsync(codigoLibro);
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro ModificarLibro(WCFBibliotecaTest.LibrosWS.Libro libroAModificar) {
            return base.Channel.ModificarLibro(libroAModificar);
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ModificarLibroAsync(WCFBibliotecaTest.LibrosWS.Libro libroAModificar) {
            return base.Channel.ModificarLibroAsync(libroAModificar);
        }
        
        public void EliminarLibro(string codigoLibro) {
            base.Channel.EliminarLibro(codigoLibro);
        }
        
        public System.Threading.Tasks.Task EliminarLibroAsync(string codigoLibro) {
            return base.Channel.EliminarLibroAsync(codigoLibro);
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro[] ListarLibros() {
            return base.Channel.ListarLibros();
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro[]> ListarLibrosAsync() {
            return base.Channel.ListarLibrosAsync();
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro ObtenerLibroPorTitulo(string titulo) {
            return base.Channel.ObtenerLibroPorTitulo(titulo);
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroPorTituloAsync(string titulo) {
            return base.Channel.ObtenerLibroPorTituloAsync(titulo);
        }
        
        public WCFBibliotecaTest.LibrosWS.Libro ObtenerLibroPorAutor(string autor) {
            return base.Channel.ObtenerLibroPorAutor(autor);
        }
        
        public System.Threading.Tasks.Task<WCFBibliotecaTest.LibrosWS.Libro> ObtenerLibroPorAutorAsync(string autor) {
            return base.Channel.ObtenerLibroPorAutorAsync(autor);
        }
    }
}
